@page "/CreatePost"

@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks

@inject HttpClient http



<h3>Create Post</h3>

<EditForm Model="@Post" OnValidSubmit="@AddPost">
    <DataAnnotationsValidator />
    <div class="topic-field">
        <label title="The title of your project">Topic:</label><br>
        <InputText @bind-Value="Post.Topic" placeholder="Project in ..." style="width: 340px;"/><br>
        <ValidationMessage For="@(() => Post.Topic)" />
    </div>
    <div class="text-field">
        <label for="Description" title="A description of what the project entails">Description:</label><br>
        <InputTextArea @bind-Value="Post.Description" placeholder="Description" rows="4" cols="40" /><br>
        <ValidationMessage For="@(() => Post.Description)" />
    </div>


    <div class="skeyword-field">
        <label for="keyword" title="Select the keywords that describes your project">Keywords:</label><br>
        <select class="Keyword" style="width: 340px;">
            <option value="" disabled selected >Select your suggested keyword</option>
            @if (KeywordDTOs == null)
            {
                <p>No keywords found</p>
            }
            else 
            @foreach (var keyword in KeywordDTOs)
            {
             <option value="@keyword.Id">@keyword.Name</option>   
            }
        </select><br>
    </div>


    <div class="newKeyword-field">
        <label for="ckeyword" title="Write your own keyword for your project">Create your own keyword</label><br>
        <input @bind="newKeywordName" placeholder="Keywords" style="width: 340px;" /><br>
    </div>
</EditForm>

    <div class="submit-button">
        <button @onclick="AddBoth">Post project</button>
    </div>



@if (_showsuccess)
{
    <blockquote class="showSuccess">
        <strong>Create Post Saved Successfully!</strong>
    </blockquote>
}


@code {
    PostDTO Post = new();
    KeywordDTO[]? KeywordDTOs;

    bool _showsuccess = false;
    private string? newTopic;
    private string? newDescription;
    private string? newKeywordName;

    
    private async Task AddPost(){

        var response = await http.PostAsJsonAsync("https://61a6407b8395690017be91cb.mockapi.io/Posts", Post);

        if (response.IsSuccessStatusCode)
        {
            _showsuccess = true;
        }
    }
       

    private async Task AddKeyword()
    {
        var addItem = new KeywordDTO { Name = newKeywordName };
        await http.PostAsJsonAsync("https://61a6407b8395690017be91cb.mockapi.io/Keywords", addItem);
    }

    private async Task AddBoth()
    {
        await AddPost();
        await AddKeyword();
    }

    protected override async Task OnInitializedAsync() =>
        KeywordDTOs = await http.GetFromJsonAsync<KeywordDTO[]>("https://localhost:5222/Keyword");

    private void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");

    }
}



<style>
    .submit-button
    {
        margin-top: 10px;
    }

    .showSuccess
    {
        border-style: 2px dotted lightgreen;
        border-left: 2px solid lightgreen;
        background-color:hsla(120,60%,70%,0.3);
        display: inline-block;
        margin-top: 20px;
    }


</style>

