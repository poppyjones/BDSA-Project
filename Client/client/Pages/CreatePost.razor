@page "/CreatePost"

@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient http



<h3>Create Post</h3>

<EditForm Model="@Post" OnValidSubmit="@AddPost">
    <DataAnnotationsValidator />
    <div class="topic-field">
        <label for="Topic">Topic:</label><br>
        <InputText @bind-Value="Post.Topic" placeholder="Project in ..."/><br>
        <ValidationMessage For="@(() => Post.Topic)" />
    </div>
    <div class="text-field">
        <label for="Description">Description:</label><br>
        <InputTextArea @bind-Value="Post.Description" placeholder="Description" rows="4" cols="50" /><br>
        <ValidationMessage For="@(() => Post.Description)" />
    </div>


    <div class="skeyword-field">
        <label for="keyword">Keywords:</label><br>
        <select class="Keyword">
            <option value="" disabled selected>Select your suggested keyword</option>
            <option>AI</option>
            <option>Machine Learning</option>
            <option>C#</option>
            <option>Python</option>
            <option>Java</option>
            <option>SQL</option>
            <option>Image Analysis</option>
        </select><br>
    </div>


    <div class="newKeyword-field">
        <label for="ckeyword">Create your own keyword</label><br>
        <InputText @bind-Value="Post.Keywords" placeholder="Keywords" /><br>
    </div>
</EditForm>

    <div class="submit-button">
        <button @onclick="AddPost">Post project</button>
    </div>



@if (_showsuccess)
{
    <blockquote>
        <strong>Create Post Saved Successfully!</strong>
    </blockquote>
}


@code {
    PostDTO Post = new();
    bool _showsuccess = false;
    private string? newTopic;
    private string? newDescription;
    private string? newKeywords;
    

    private async Task AddPost()
    {
        @*var addItem = new PostDTO { Topic = newTopic, Description = newDescription, Keywords = newKeywords}; *@
        var response = await http.PostAsJsonAsync("https://61a6407b8395690017be91cb.mockapi.io/Posts", Post);

        if (response.IsSuccessStatusCode)
        {
            _showsuccess = true;
        }
       

    }


}
